# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f6c076b7-9666-459e-8a7a-58d4b48b0a07";
      fsType = "ext4";
    };

   boot.supportedFilesystems = [ "ext4" ];
     
   systemd.mounts = [{
       what = "/dev/disk/by-uuid/35a508c8-26f7-40ed-9a80-f4a6c7fe7b7e";
       where = "/mnt/disco-d";
       type = "ext4";
       options = "rw,nofail";
       wantedBy = [ "multi-user.target" ];
     }];

  
  swapDevices =
    [ { device = "/dev/disk/by-uuid/1f22a403-872a-42e2-91b0-99e1179dad2d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0f3u2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
